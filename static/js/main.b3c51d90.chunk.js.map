{"version":3,"sources":["App.js","index.js"],"names":["Text","Typography","App","useState","state","setState","message","setMessage","result","setResult","rankList","setRankList","visible","setVisible","confirmLoading","setConfirmLoading","name","setName","timeout","useRef","startTime","endTime","screenNow","current","setTimeout","Date","Math","floor","random","useEffect","axios","get","then","res","data","catch","err","console","error","id","percent","length","status","className","onClick","clearTimeout","prev","testSize","type","parseInt","reduce","a","c","style","marginBottom","Modal","info","title","content","map","v","i","memberName","rateTime","onOk","direction","post","onCancel","placeholder","value","onChange","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3c51d90.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Modal, Progress, Button, Typography, Space, Input } from 'antd';\nimport axios from 'axios';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nconst { Text } = Typography;\nconst testSize = 5;\n\nconst App = () => {\n  const [state, setState] = useState('waiting');\n  const [message, setMessage] = useState('시작');\n  const [result, setResult] = useState([]);\n  const [rankList, setRankList] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [name, setName] = useState('');\n\n  const onCheangeName = (e) => {\n    setName(e.target.value);\n  };\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      axios.post('http://developer-green-final.click:9000/members', {\n        memberName: name,\n        rateTime: parseInt(result.reduce((a, c) => a + c) / result.length),\n      });\n\n      setName('');\n      setVisible(false);\n      setConfirmLoading(false);\n      setResult([]);\n      setState('waiting');\n      setMessage('시작');\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  function info() {\n    Modal.info({\n      title: '전체 랭킹',\n      content: (\n        <>\n          {rankList.map((v, i) => (\n            <div key={i}>\n              {i + 1}등 : {v.memberName}({v.rateTime}ms)\n            </div>\n          ))}\n        </>\n      ),\n      onOk() {},\n    });\n  }\n\n  const timeout = useRef(null);\n  const startTime = useRef();\n  const endTime = useRef();\n\n  const onClickScreen = () => {\n    if (state === 'waiting') {\n      setState('ready');\n      setMessage('준비');\n      screenNow();\n    } else if (state === 'ready') {\n      clearTimeout(timeout.current);\n      setState('waiting');\n      setMessage('초록색에 클릭하세요!!');\n      setResult([]);\n    } else if (state === 'now') {\n      endTime.current = new Date();\n      setResult((prev) => {\n        return [...prev, endTime.current - startTime.current];\n      });\n      if (result.length === testSize - 1) {\n        setState('exit');\n        setMessage('종료');\n      } else {\n        setState('ready');\n        setMessage('준비');\n        screenNow();\n      }\n    }\n  };\n\n  const screenNow = () => {\n    timeout.current = setTimeout(() => {\n      setState('now');\n      setMessage('클릭');\n      startTime.current = new Date();\n    }, Math.floor(Math.random() * 2000) + 3000);\n  };\n\n  const renderScoreList = () => {\n    return result.length === 0 ? null : (\n      <>\n        {result.map((v, i) => (\n          <Text key={i}>\n            {i + 1}회차 : {v}ms\n          </Text>\n        ))}\n      </>\n    );\n  };\n\n  useEffect(() => {\n    axios\n      .get('http://developer-green-final.click:9000/members/rank')\n      .then((res) => {\n        setRankList(res.data);\n      })\n      .catch((err) => console.error(err));\n  }, [visible]);\n\n  return (\n    <>\n      <div id=\"back\">\n        <Progress percent={result.length * (100 / testSize)} status=\"active\"></Progress>\n        <div id=\"screen\" className={state} onClick={onClickScreen}>\n          <span id=\"message\">\n            {result.length === testSize ? (\n              <>\n                <Text type=\"secondary\">평균기록 : {parseInt(result.reduce((a, c) => a + c) / result.length)}ms</Text>\n                <br />\n                <Button type=\"primary\" onClick={showModal}>\n                  등록\n                </Button>\n              </>\n            ) : (\n              message\n            )}\n          </span>\n        </div>\n\n        <Button style={{ marginBottom: 30 }} onClick={info}>\n          랭킹 확인\n        </Button>\n        <Space direction=\"vertical\">{renderScoreList()}</Space>\n      </div>\n      <Modal title=\"랭킹 등록\" visible={visible} onOk={handleOk} confirmLoading={confirmLoading} onCancel={handleCancel}>\n        <Input placeholder=\"닉네임을 입력하세요\" value={name} onChange={onCheangeName} />\n      </Modal>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}