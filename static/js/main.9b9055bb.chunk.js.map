{"version":3,"sources":["App.js","index.js"],"names":["Text","Typography","App","useState","state","setState","message","setMessage","result","setResult","visible","setVisible","confirmLoading","setConfirmLoading","name","setName","info","a","axios","get","rankList","Modal","title","content","data","map","v","i","memberName","rateTime","onOk","timeout","useRef","startTime","endTime","screenNow","current","setTimeout","Date","Math","floor","random","id","percent","length","status","className","onClick","clearTimeout","prev","testSize","type","parseInt","reduce","c","style","fontWeight","fontSize","marginBottom","direction","post","onCancel","placeholder","value","onChange","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b9055bb.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Modal, Progress, Button, Typography, Space, Input } from 'antd';\nimport axios from 'axios';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nconst { Text } = Typography;\nconst testSize = 5;\n\nconst App = () => {\n  const [state, setState] = useState('waiting');\n  const [message, setMessage] = useState('시작');\n  const [result, setResult] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [name, setName] = useState('');\n\n  const onCheangeName = (e) => {\n    setName(e.target.value);\n  };\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      axios.post('https://developer-green-final.click/members', {\n        memberName: name,\n        rateTime: parseInt(result.reduce((a, c) => a + c) / result.length),\n      });\n\n      setName('');\n      setVisible(false);\n      setConfirmLoading(false);\n      setResult([]);\n      setState('waiting');\n      setMessage('시작');\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const info = async () => {\n    const rankList = await axios.get('https://developer-green-final.click/members/rank');\n\n    Modal.info({\n      title: '이번주 랭킹',\n      content: (\n        <>\n          {rankList.data.map((v, i) => (\n            <div key={i}>\n              {i + 1}등 : {v.memberName}({v.rateTime}ms)\n            </div>\n          ))}\n        </>\n      ),\n      onOk() {},\n    });\n  };\n\n  const timeout = useRef(null);\n  const startTime = useRef();\n  const endTime = useRef();\n\n  const onClickScreen = () => {\n    if (state === 'waiting') {\n      setState('ready');\n      setMessage('준비');\n      screenNow();\n    } else if (state === 'ready') {\n      clearTimeout(timeout.current);\n      setState('waiting');\n      setMessage('초록색에 클릭하세요!!');\n      setResult([]);\n    } else if (state === 'now') {\n      endTime.current = new Date();\n      setResult((prev) => {\n        return [...prev, endTime.current - startTime.current];\n      });\n      if (result.length === testSize - 1) {\n        setState('exit');\n        setMessage('종료');\n      } else {\n        setState('ready');\n        setMessage('준비');\n        screenNow();\n      }\n    }\n  };\n\n  const screenNow = () => {\n    timeout.current = setTimeout(() => {\n      setState('now');\n      setMessage('클릭');\n      startTime.current = new Date();\n    }, Math.floor(Math.random() * 2000) + 3000);\n  };\n\n  const renderScoreList = () => {\n    return result.length === 0 ? null : (\n      <>\n        {result.map((v, i) => (\n          <Text key={i}>\n            {i + 1}회차 : {v}ms\n          </Text>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div id=\"back\">\n        <Progress percent={result.length * (100 / testSize)} status=\"active\"></Progress>\n        <div id=\"screen\" className={state} onClick={onClickScreen}>\n          <span id=\"message\">\n            {result.length === testSize ? (\n              <>\n                <Text type=\"secondary\">평균기록 : {parseInt(result.reduce((a, c) => a + c) / result.length)}ms</Text>\n                <br />\n                <Button type=\"primary\" onClick={showModal}>\n                  등록\n                </Button>\n              </>\n            ) : (\n              message\n            )}\n          </span>\n        </div>\n        <p style={{ fontWeight: 'bold', fontSize: '20px' }}>테스트는 총 5회 진행 됩니다.</p>\n        <p style={{ fontWeight: 'bold', fontSize: '20px' }}>초록색으로 변할때 터치해 주세요.</p>\n        <Button style={{ marginBottom: 30 }} onClick={info}>\n          주간 랭킹\n        </Button>\n        <Space direction=\"vertical\">{renderScoreList()}</Space>\n      </div>\n      <Modal title=\"랭킹 등록\" visible={visible} onOk={handleOk} confirmLoading={confirmLoading} onCancel={handleCancel}>\n        <Input placeholder=\"닉네임을 입력하세요\" value={name} onChange={onCheangeName} />\n      </Modal>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}